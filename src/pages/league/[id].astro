---
import Layout from '@/layouts/Layout.astro';
import { createClientServer } from '@/lib/supabaseClient';
import StandingsTable from '@/components/league/StandingsTable';

const { id } = Astro.params;
const supabase = createClientServer(Astro.cookies);

const { data: league } = await supabase
  .from('league_calendar')
  .select('*')
  .eq('league_id', id!)
  .maybeSingle();

const { data: teams } = await supabase
  .from('league_results')
  .select('*')
  .eq('league_id', id!)
  .order('wins', { ascending: false })
  .limit(20);

const { data: recentMatches } = await supabase
  .from('matches')
  .select(`
    id,
    played_at,
    team_a_id,
    team_b_id,
    score_a,
    score_b
  `)
  .eq('league_id', id!)
  .not('played_at', 'is', null)
  .order('played_at', { ascending: false })
  .limit(10);
---

<Layout title={`${league?.league_name || 'League'} - Global Rankings`}>
  <div class="app-theme">
    <div class="container">
      {league ? (
        <>
          <div class="paper" style="margin-bottom: 2rem;">
            <div style="display: flex; align-items: center; gap: 1.5rem; flex-wrap: wrap;">
              {league.league_logo && (
                <img 
                  src={league.league_logo} 
                  alt={league.league_name || 'League'} 
                  style="width: 80px; height: 80px; object-fit: contain;"
                />
              )}
              <div style="flex: 1;">
                <h1 style="margin: 0 0 0.5rem; font-size: 2.5rem;">{league.league_name}</h1>
                {league.season_number && (
                  <p class="text-secondary">Season {league.season_number}</p>
                )}
              </div>
            </div>
          </div>

          <div class="paper" style="margin-bottom: 2rem;">
            <h2 style="margin-bottom: 1.5rem;">Standings - Click team to view details</h2>
            {teams && teams.length > 0 ? (
              <StandingsTable teams={teams} client:load />
            ) : (
              <p class="text-secondary">No teams found</p>
            )}
          </div>

          <div class="paper">
            <h2 style="margin-bottom: 1.5rem;">Recent Matches</h2>
            {recentMatches && recentMatches.length > 0 ? (
              <div style="display: flex; flex-direction: column; gap: 1rem;">
                {recentMatches.map((match: any) => (
                  <div class="card" style="padding: 1rem;">
                    <div style="display: flex; justify-content: space-between; align-items: center;">
                      <span style="font-size: 1.125rem; font-weight: 600;">
                        {match.score_a} - {match.score_b}
                      </span>
                      <p class="text-secondary" style="font-size: 0.875rem; margin: 0;">
                        {new Date(match.played_at).toLocaleDateString()}
                      </p>
                    </div>
                  </div>
                ))}
              </div>
            ) : (
              <p class="text-secondary">No recent matches found</p>
            )}
          </div>
        </>
      ) : (
        <div class="paper">
          <p class="text-secondary">League not found</p>
        </div>
      )}
    </div>
  </div>
</Layout>
