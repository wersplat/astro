---
import Layout from '@/layouts/Layout.astro';
import { createClientServer } from '@/lib/supabaseClient';

const { id } = Astro.params;
const supabase = createClientServer(Astro.cookies);

const { data: tournament } = await supabase
  .from('tournament_calendar')
  .select('*')
  .eq('id', id!)
  .maybeSingle();

const { data: results } = await supabase
  .from('tournament_results')
  .select('*')
  .eq('tournament_id', id!)
  .order('final_placement', { ascending: true })
  .limit(20);
---

<Layout title={`${tournament?.tournament_name || 'Tournament'} - Global Rankings`}>
  <div class="app-theme">
    <div class="container">
      {tournament ? (
        <>
          <div class="paper" style="margin-bottom: 2rem;">
            <div style="display: flex; align-items: center; gap: 1.5rem; flex-wrap: wrap;">
              {tournament.organizer_logo_url && (
                <img 
                  src={tournament.organizer_logo_url} 
                  alt={tournament.organizer_name || 'Organizer'} 
                  style="width: 80px; height: 80px; object-fit: contain;"
                />
              )}
              <div style="flex: 1;">
                <h1 style="margin: 0 0 0.5rem; font-size: 2.5rem;">{tournament.tournament_name}</h1>
                <p class="text-secondary">
                  {tournament.organizer_name}
                  {tournament.start_date && ` â€¢ ${new Date(tournament.start_date).toLocaleDateString()}`}
                </p>
              </div>
              {tournament.tier && (
                <span style="padding: 0.5rem 1rem; border-radius: 4px; background: var(--color-primary); color: white; font-weight: 600;">
                  {tournament.tier}
                </span>
              )}
            </div>
          </div>

          <div class="paper">
            <h2 style="margin-bottom: 1.5rem;">Results</h2>
            <div style="overflow-x: auto;">
              <table style="width: 100%; border-collapse: collapse;">
                <thead>
                  <tr style="border-bottom: 1px solid var(--color-border);">
                    <th style="padding: 0.75rem; text-align: left; color: var(--color-text-secondary);">Place</th>
                    <th style="padding: 0.75rem; text-align: left; color: var(--color-text-secondary);">Team</th>
                    <th style="padding: 0.75rem; text-align: left; color: var(--color-text-secondary);">W</th>
                    <th style="padding: 0.75rem; text-align: left; color: var(--color-text-secondary);">L</th>
                  </tr>
                </thead>
                <tbody>
                  {results?.map((result: any) => (
                    <tr style="border-bottom: 1px solid var(--color-border);">
                      <td style="padding: 0.75rem;">
                        <span style={`font-weight: 700; color: ${result.final_placement === 1 ? '#F59E08' : result.final_placement === 2 ? '#94A3B8' : result.final_placement === 3 ? '#CD7F32' : 'inherit'};`}>
                          {result.final_placement || '-'}
                        </span>
                      </td>
                      <td style="padding: 0.75rem;">
                        <a href={`/team/${result.team_id}`} style="color: inherit; text-decoration: none;">
                          {result.team_name}
                        </a>
                      </td>
                      <td style="padding: 0.75rem;">{result.wins || 0}</td>
                      <td style="padding: 0.75rem;">{result.losses || 0}</td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
            {(!results || results.length === 0) && (
              <p class="text-secondary">No results found</p>
            )}
          </div>
        </>
      ) : (
        <div class="paper">
          <p class="text-secondary">Tournament not found</p>
        </div>
      )}
    </div>
  </div>
</Layout>
