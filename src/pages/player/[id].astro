---
import Layout from '@/layouts/Layout.astro';
import { createClientServer } from '@/lib/supabaseClient';
import RecentGamesTable from '@/components/player/RecentGamesTable';

const { id } = Astro.params;
const supabase = createClientServer(Astro.cookies);

const { data: player } = await supabase
  .from('players')
  .select('*')
  .eq('id', id!)
  .maybeSingle();

const { data: team } = player?.current_team_id ? await supabase
  .from('teams')
  .select('id, name, logo_url, global_rank, current_rp')
  .eq('id', player.current_team_id)
  .maybeSingle() : { data: null };

const { data: recentGames } = await supabase
  .from('player_stats')
  .select(`
    id,
    match_id,
    points,
    assists,
    rebounds,
    steals,
    blocks,
    turnovers,
    fgm,
    fga,
    three_points_made,
    three_points_attempted,
    matches!inner(id, played_at, boxscore_url)
  `)
  .eq('player_id', id!)
  .order('created_at', { ascending: false })
  .limit(10);
---

<Layout title={`${player?.gamertag || 'Player'} - Global Rankings`}>
  <div class="app-theme">
    <div class="container">
      {player ? (
        <>
          <div class="paper" style="margin-bottom: 2rem;">
            <div style="display: flex; align-items: center; gap: 1.5rem; flex-wrap: wrap;">
              <div style="flex: 1;">
                <h1 style="margin: 0 0 0.5rem; font-size: 2.5rem;">{player.gamertag}</h1>
                <p class="text-secondary" style="font-size: 1.125rem;">
                  {player.position || 'Position Unknown'}
                </p>
                {team && (
                  <a 
                    href={`/team/${team.id}`} 
                    style="color: var(--color-primary); text-decoration: none; font-size: 1.125rem; font-weight: 600; display: inline-block; margin-top: 0.5rem; transition: color 0.2s;"
                    onmouseover="this.style.textDecoration='underline'"
                    onmouseout="this.style.textDecoration='none'"
                  >
                    {team.name} â†’
                  </a>
                )}
              </div>
              <div style="text-align: right;">
                {player.player_rp && (
                  <div>
                    <div class="text-secondary" style="font-size: 0.875rem;">Ranking Points</div>
                    <div style="font-size: 2rem; font-weight: 800; color: var(--color-primary);">
                      {player.player_rp}
                    </div>
                  </div>
                )}
              </div>
            </div>
          </div>

          <div class="paper">
            <h2 style="margin-bottom: 1.5rem;">Recent Games (Click for details)</h2>
            {recentGames && recentGames.length > 0 ? (
              <RecentGamesTable games={recentGames} client:load />
            ) : (
              <p class="text-secondary">No recent games found</p>
            )}
          </div>
        </>
      ) : (
        <div class="paper">
          <p class="text-secondary">Player not found</p>
        </div>
      )}
    </div>
  </div>
</Layout>
